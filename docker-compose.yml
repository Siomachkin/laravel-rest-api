version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: user_crud_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - database
      - redis
    networks:
      - user_crud_network
    command: >
      sh -c "
        chmod -R 777 storage bootstrap/cache 2>/dev/null || true
        
        if [ ! -f artisan ]; then
          echo 'Installing Laravel...'
          mkdir -p /tmp/laravel-install
          cd /tmp/laravel-install
          composer create-project laravel/laravel . --no-dev --no-interaction
          cp -r /tmp/laravel-install/* /var/www/html/
          cp /tmp/laravel-install/.env.example /var/www/html/ 2>/dev/null || true
          cp /tmp/laravel-install/.gitignore /var/www/html/ 2>/dev/null || true
          rm -rf /tmp/laravel-install
          echo 'Laravel has been installed!'
        fi
        
        cd /var/www/html
        chmod -R 777 storage bootstrap/cache 2>/dev/null || true
        
        if [ ! -f .env ] && [ -f .env.example ]; then
          echo 'Copying .env.example to .env...'
          cp .env.dev .env
        fi
        
        php artisan key:generate --no-interaction
        
        echo 'Waiting for the database...'
        sleep 15
        
        php artisan migrate --force
        
        echo 'Application is ready!'
        php-fpm
      "

  nginx:
    image: nginx:alpine
    container_name: user_crud_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - user_crud_network

  database:
    image: mysql:8.0
    container_name: user_crud_database
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: user_crud_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_PASSWORD: user_password
      MYSQL_USER: user_crud_user
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - user_crud_network

  # Queue workers for horizontal scaling
  queue-worker-emails-1:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: user_crud_queue_worker_emails_1
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - database
      - redis
    networks:
      - user_crud_network
    command: >
      sh -c "
        echo 'Waiting for application to be ready...'
        sleep 15
        echo 'Starting email queue worker #1...'
        php artisan queue:work redis --sleep=3 --tries=3 --max-time=3600 --queue=emails --timeout=60 --memory=512
      "

  queue-worker-emails-2:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: user_crud_queue_worker_emails_2
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - database
      - redis
    networks:
      - user_crud_network
    command: >
      sh -c "
        echo 'Waiting for application to be ready...'
        sleep 17
        echo 'Starting email queue worker #2...'
        php artisan queue:work redis --sleep=3 --tries=3 --max-time=3600 --queue=emails --timeout=60 --memory=512
      "

  redis:
    image: redis:7-alpine
    container_name: user_crud_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - user_crud_network

  mailpit:
    image: axllent/mailpit
    container_name: user_crud_mailpit
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - user_crud_network

volumes:
  db_data:
  redis_data:

networks:
  user_crud_network:
    driver: bridge
