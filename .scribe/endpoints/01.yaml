name: 'User Email Management'
description: |-

  APIs for managing user email addresses
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/emails'
    metadata:
      groupName: 'User Email Management'
      groupDescription: |-

        APIs for managing user email addresses
      subgroup: ''
      subgroupDescription: ''
      title: "Get user's email addresses"
      description: 'Retrieves all email addresses for a specific user, ordered by primary status.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "email": "john@example.com",
                "is_primary": true,
                "verified_at": null,
                "created_at": "2025-07-09T12:00:00.000000Z",
                "updated_at": "2025-07-09T12:00:00.000000Z"
              },
              {
                "id": 2,
                "email": "john.work@example.com",
                "is_primary": false,
                "verified_at": null,
                "created_at": "2025-07-09T12:00:00.000000Z",
                "updated_at": "2025-07-09T12:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\User] 1"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{user_id}/emails'
    metadata:
      groupName: 'User Email Management'
      groupDescription: |-

        APIs for managing user email addresses
      subgroup: ''
      subgroupDescription: ''
      title: 'Add new email address'
      description: |-
        Adds a new email address to a user. If set as primary, it will replace
        the current primary email.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address.'
        required: true
        example: john.new@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_primary:
        name: is_primary
        description: 'Whether this email should be set as primary.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john.new@example.com
      is_primary: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Email address added successfully",
            "data": {
              "id": 3,
              "email": "john.new@example.com",
              "is_primary": true,
              "verified_at": null,
              "created_at": "2025-07-09T12:00:00.000000Z",
              "updated_at": "2025-07-09T12:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\User] 1"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": [
                "The email field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{user_id}/emails/{id}'
    metadata:
      groupName: 'User Email Management'
      groupDescription: |-

        APIs for managing user email addresses
      subgroup: ''
      subgroupDescription: ''
      title: 'Update email address'
      description: |-
        Updates an existing email address. Can change the email address itself
        or set it as primary.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the email.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The new email address.'
        required: false
        example: john.updated@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_primary:
        name: is_primary
        description: 'Whether this email should be set as primary.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john.updated@example.com
      is_primary: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Email address updated successfully",
            "data": {
              "id": 1,
              "email": "john.updated@example.com",
              "is_primary": true,
              "verified_at": null,
              "created_at": "2025-07-09T12:00:00.000000Z",
              "updated_at": "2025-07-09T12:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Email address not found for this user"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{user_id}/emails/{id}'
    metadata:
      groupName: 'User Email Management'
      groupDescription: |-

        APIs for managing user email addresses
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete email address'
      description: |-
        Removes an email address from a user. Cannot delete the primary email
        if it's the only email address.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the email.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Email address deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Cannot delete primary email address. Set another email as primary first."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Email address not found for this user"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user_id}/emails/{email_id}/set-primary'
    metadata:
      groupName: 'User Email Management'
      groupDescription: |-

        APIs for managing user email addresses
      subgroup: ''
      subgroupDescription: ''
      title: 'Set primary email'
      description: |-
        Sets the specified email address as the primary email for the user.
        The previous primary email will be set as non-primary.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email_id:
        name: email_id
        description: 'The ID of the email.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
      email_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Primary email address updated successfully",
            "data": {
              "id": 1,
              "email": "john@example.com",
              "is_primary": true,
              "verified_at": null,
              "created_at": "2025-07-09T12:00:00.000000Z",
              "updated_at": "2025-07-09T12:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Email address not found for this user"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
